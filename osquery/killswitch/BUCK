#  Copyright (c) 2014-present, Facebook, Inc.
#  All rights reserved.
#
#  This source code is licensed under both the Apache 2.0 license (found in the
#  LICENSE file in the root directory of this source tree) and the GPLv2 (found
#  in the COPYING file in the root directory of this source tree).
#  You may select, at your option, one of the above-listed licenses.

load("//tools/build_defs/oss/osquery:cxx.bzl", "osquery_cxx_library", "osquery_cxx_test")
load("//tools/build_defs/oss/osquery:native.bzl", "osquery_target")
load("//tools/build_defs/oss/osquery:third_party.bzl", "osquery_tp_target")

osquery_cxx_library(
    name = "killswitch",
    srcs = [
        "killswitch.cpp",
        "killswitch_plugin.cpp",
        "killswitch_refreshable_plugin.cpp",
    ],
    header_namespace = "osquery/killswitch",
    exported_headers = [
        "killswitch_plugin.h",
        "killswitch_refreshable_plugin.h",
    ],
    link_whole = True,
    tests = [":killswitch_tests"],
    visibility = ["PUBLIC"],
    deps = [
        osquery_target("osquery/core:core"),
        osquery_tp_target("googletest", "gtest"),
    ],
)

osquery_cxx_test(
    name = "killswitch_tests",
    srcs = [
        "tests/killswitch_tests.cpp",
    ],
    env = {
        "TEST_CONF_FILES_DIR": "$(location {})".format(
            osquery_target("tools/tests:conf_files"),
        ),
    },
    visibility = ["PUBLIC"],
    deps = [
        osquery_target("osquery/config/tests:test_utils"),
        osquery_target("osquery/config/plugins:tls_config"),
        osquery_target("osquery/database:database"),
        osquery_target("osquery/database/plugins:ephemeral"),
        osquery_target("osquery/events:events"),
        osquery_target("osquery/extensions:extensions"),
        osquery_target("osquery/remote/enroll:tls_enroll"),
        osquery_target("osquery/utils/conversions:conversions"),
        osquery_target("osquery/utils/info:info"),
        osquery_target("osquery/killswitch/plugins:filesystem"),
        osquery_target("tests:helper"),
    ],
)
